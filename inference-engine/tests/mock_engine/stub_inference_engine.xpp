//
// Copyright 2016-2018 Intel Corporation.
//
// This software and the related documents are Intel copyrighted materials,
// and your use of them is governed by the express license under which they
// were provided to you (End User License Agreement for the Intel(R) Software
// Development Products (Version May 2017)). Unless the License provides
// otherwise, you may not use, modify, copy, publish, distribute, disclose or
// transmit this software or the related documents without Intel's prior
// written permission.
//
// This software and the related documents are provided as is, with no
// express or implied warranties, other than those that are expressly
// stated in the License.
//

#include <random>
#include <algorithm>

#include "stub_inference_engine.hpp"

using namespace InferenceEngine;
using namespace std;

void StubInferenceEngine::Infere(const Blob &input, Blob & output) {
    unsigned int batchNumber = input.dims().size() > 3 ? input.dims()[3] : 1;
    auto &outBlob = dynamic_cast<TBlob<float>&>(output);
    outBlob.Resize({ 1000, batchNumber });
    outBlob.allocate();
    
    //uniform distribution in 0-1 range
    random_device rd;
    mt19937 mersen(rd());
    uniform_real_distribution<float> uniformDistribution(0 , 1);
    generate(outBlob.data(), outBlob.data() + outBlob.size(), [&] () {
        return uniformDistribution(mersen);
    });
}

