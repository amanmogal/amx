// Copyright (C) 2018-2021 Intel Corporation
// SPDX-License-Identifier: Apache-2.0
//

#include <iostream>
#include "gtest/gtest.h"
#include "ngraph/ngraph.hpp"
#include "ngraph/runtime/tensor.hpp"
#include "runtime/backend.hpp"
#include "util/all_close.hpp"
#include "util/all_close_f.hpp"
#include "util/engine/test_engines.hpp"
#include "util/known_element_types.hpp"
#include "util/ndarray.hpp"
#include "util/test_case.hpp"
#include "util/test_control.hpp"
#include "util/test_tools.hpp"

using namespace std;
using namespace ngraph;

static string s_manifest = "${MANIFEST}";

using TestEngine = test::ENGINE_CLASS_NAME(${BACKEND_NAME});

static const std::vector<float> input_data = {
    0.85943836,  0.009941814, 0.004292889, 0.54598427,   0.8270831,   0.49770153,  0.9035636,
    0.19274887,  0.8589833,   0.88759327,  0.72343576,   0.057539318, 0.915801,    0.63455844,
    0.25069925,  0.045601673, 0.29793364,  0.8492151,    0.6885839,   0.57419384,  0.009737609,
    0.68192583,  0.7614807,   0.37603703,  0.51804876,   0.033039097, 0.63702065,  0.78960556,
    0.5007368,   0.7248742,   0.2040932,   0.1211606,    0.76035476,  0.44004318,  0.95635134,
    0.82913375,  0.225465,    0.009166263, 0.05445403,   0.5885675,   0.87822133,  0.14324947,
    0.68606305,  0.3274419,   0.9169595,   0.732179,     0.04614906,  0.03505424,  0.84526163,
    0.9972937,   0.89781004,  0.9987864,   0.24641308,   0.34678686,  0.22731997,  0.95805293,
    0.595993,    0.8537836,   0.9174756,   0.17441267,   0.86681056,  0.15913424,  0.6638066,
    0.522398,    0.51548326,  0.024979044, 0.1731268,    0.068090245, 0.6125645,   0.4865482,
    0.2873719,   0.35936728,  0.64452374,  0.27963468,   0.59981745,  0.6309508,   0.507604,
    0.23389837,  0.77500635,  0.4462004,   0.53165394,   0.6535075,   0.4306448,   0.21468966,
    0.6925882,   0.11183031,  0.25347117,  0.2209481,    0.8060583,   0.34712377,  0.78980505,
    0.16110454,  0.6376819,   0.78736854,  0.909368,     0.6915289,   0.24747796,  0.32442623,
    0.22714981,  0.23976989,  0.25199527,  0.28412706,   0.32461873,  0.51917267,  0.8394496,
    0.6324911,   0.28498915,  0.8887276,   0.90213394,   0.16050571,  0.32190812,  0.67677563,
    0.8594967,   0.28917953,  0.1931407,   0.8282108,    0.14881423,  0.18073067,  0.8490643,
    0.2356146,   0.86200285,  0.57409924,  0.94718546,   0.092213534, 0.34502912,  0.4719212,
    0.60031396,  0.22602181,  0.3067876,   0.49529344,   0.11133887,  0.47633907,  0.13236542,
    0.69677263,  0.8490109,   0.6685073,   0.24199674,   0.7983137,   0.37593383,  0.74520975,
    0.16743147,  0.84144354,  0.93073046,  0.55940866,   0.67484015,  0.077098235, 0.69045097,
    0.06949082,  0.6804774,   0.79804176,  0.49027568,   0.8843709,   0.5665486,   0.91798306,
    0.47884017,  0.94707423,  0.98279756,  0.62054926,   0.8134105,   0.01336217,  0.78324115,
    0.9938295,   0.99227554,  0.66681916,  0.38842493,   0.3835454,   0.120395586, 0.5478275,
    0.13309076,  0.9468553,   0.24595714,  0.0057277656, 0.14570542,  0.31220108,  0.41687667,
    0.679465,    0.5731583,   0.7383743,   0.013198466,  0.34619793,  0.9278514,   0.48510832,
    0.46039802,  0.8171329,   0.5041023,   0.37600085,   0.124404594, 0.4201713,   0.7470036,
    0.7340853,   0.8449047,   0.137517,    0.14771219,   0.99655616,  0.2178388,   0.4121613,
    0.8655656,   0.32849622,  0.7574791,   0.95230037,   0.5806251,   0.9598742,   0.7183528,
    0.042957753, 0.2926446,   0.5882527,   0.05208914,   0.3216481,   0.5205192,   0.5095992,
    0.011508227, 0.5209922,   0.78207654,  0.34570032,   0.7968098,   0.4619513,   0.0047925604,
    0.029039407, 0.7673424,   0.571703,    0.44400942,   0.82529145,  0.29335254,  0.34418115,
    0.48119327,  0.38321403,  0.31083322,  0.7179562,    0.41055596,  0.06207573,  0.8747831,
    0.6018095,   0.4483476,   0.16189687,  0.8611539,    0.79723805,  0.42178747,  0.95597315,
    0.5534858,   0.33466807,  0.36827618,  0.60728735,   0.6582703,   0.6790265,   0.870856,
    0.8868432,   0.43860948,  0.32468447,  0.77624434,   0.3403061,   0.14144918,  0.23022941,
    0.07176102,  0.06941459,  0.37346482,  0.9120822,    0.65890974,  0.77746564,  0.4515671,
    0.45455948,  0.15909587,  0.8017096,   0.6259673,    0.6117355,   0.77020043,  0.08495594,
    0.30376136,  0.55266386,  0.8497134,   0.91790336,   0.86088765,  0.88179666,  0.9009849,
    0.97200614,  0.94119,     0.77911216,  0.8057816,    0.14040896,  0.66522235,  0.6649202,
    0.048396785, 0.75035393,  0.4520953,   0.9877601,    0.46115568,  0.2167145,   0.9271302,
    0.39395386,  0.68578094,  0.576275,    0.20754486,   0.5408786,   0.46040633,  0.18199016,
    0.66303253,  0.6288556,   0.14313427,  0.91675115,   0.36198065,  0.51337945,  0.84241706,
    0.22333568,  0.38011634,  0.024615016, 0.19370414,   0.23593484,  0.32207185,  0.47971123,
    0.6202779,   0.6944977,   0.43612957,  0.07961436,   0.57468814,  0.100025274, 0.42476946,
    0.95338464,  0.666547,    0.8683905,   0.52689695,   0.6284723,   0.85813546,  0.4865953,
    0.8269112,   0.08833949,  0.69269264,  0.41784903,   0.5969149,   0.07599888,  0.14184453,
    0.49042618,  0.44027725,  0.6256328,   0.2716237,    0.0999099,   0.09831784,  0.92469853,
    0.24196884,  0.9073526,   0.7523511,   0.7761173,    0.28489882,  0.96349007,  0.5884645,
    0.74933976,  0.06400105,  0.4376275,   0.34752035,   0.6006149,   0.034923803, 0.066874385,
    0.9790322,   0.5558188,   0.97579825,  0.025802653,  0.537738,    0.24921915,  0.111012295,
    0.85987717,  0.781183,    0.69588315,  0.94621634,   0.74946797,  0.6949375,   0.009165181,
    0.91075164,  0.72913235,  0.25934777,  0.19463088,   0.5283304,   0.9241759,   0.0563183,
    0.74323857,  0.43722472,  0.2958358,   0.85980684,   0.029655656, 0.362904,    0.19682994,
    0.37778872,  0.09406928,  0.23010127,  0.44393733,   0.420214,    0.39723217,  0.13777487,
    0.06385251,  0.9535715,   0.89861375,  0.2463547,    0.673834,    0.8008994,   0.0861585,
    0.6613363,   0.79498637,  0.79322547,  0.083214305,  0.577025,    0.58655965,  0.119723536,
    0.0012204717};

NGRAPH_TEST(${BACKEND_NAME}, dft1d_eval)
{
    auto data = std::make_shared<op::Parameter>(element::f32, Shape{2, 10, 10, 2});
    auto axes_input = op::Constant::create<int64_t>(element::i64, Shape{1}, {2});
    auto dft = std::make_shared<op::v7::DFT>(data, axes_input);

    auto f = make_shared<Function>(dft, ParameterVector{data});

    auto backend = runtime::Backend::create("${BACKEND_NAME}");

    std::vector<float> expected_dft1d_results = {
        6.329814,     4.2950764,     -0.8105316,   -0.7187835,  -0.059136264, 0.2709784,
        0.82793635,   0.57937646,    0.5997731,    -1.3291739,  1.188664,     1.462941,
        -0.01811248,  -1.8314927,    0.16004556,   -2.219835,   1.0620322,    -1.0679832,
        -0.68610185,  0.658314,      4.627743,     4.5935497,   -0.78950775,  -0.32600924,
        -1.4706655,   -1.1615934,    0.708719,     1.4568751,   -1.0970218,   -0.39268675,
        -0.5990571,   -0.81545514,   -0.39174145,  -0.420258,   0.55279106,   2.339339,
        -0.59915966,  1.3964193,     -0.8447231,   0.14907542,  6.2576666,    5.5670385,
        0.25636938,   -1.7026355,    1.161571,     0.12042561,  0.19768336,   -1.3421875,
        -0.90698814,  1.4111948,     0.70803046,   0.5795436,   1.2021728,    -0.5199567,
        -2.558736,    -0.80762154,   1.1657354,    -0.8685272,  1.2987087,    -1.0047817,
        5.6461143,    3.2111988,     0.2361581,    0.3099669,   0.6179653,    0.099535145,
        1.0438079,    -0.016701937,  -0.88529384,  -0.12907594, 0.64785606,   -0.8428119,
        -0.058392793, -1.0488291,    -0.4019828,   0.20333555,  0.45051938,   0.45967662,
        1.3713523,    -0.6549525,    5.5258985,    3.7522945,   -1.8860855,   -0.2230255,
        0.8160669,    -0.46607828,   0.123957604,  0.61024696,  0.26978388,   0.9723815,
        0.3050212,    0.69621503,    0.27244493,   -1.0805726,  0.20593566,   1.5653824,
        -0.27690098,  0.8950307,     -0.039584313, -0.18680441, 4.975611,     4.6955333,
        0.19031112,   -0.8860659,    0.91665065,   -0.5264673,  -0.4547393,   1.1623507,
        -1.4774656,   1.671129,      1.028168,     -1.6014669,  -1.2178835,   -0.13447604,
        -0.14712845,  -0.6739672,    -0.3273949,   -0.9012072,  -0.9661755,   0.03590688,
        4.771964,     5.244689,      -0.03415192,  -0.37281254, -0.49070793,  -0.65789306,
        0.8143984,    -0.8913989,    -0.19890547,  0.17876014,  -0.9956009,   0.82810897,
        0.55270624,   -0.023768127,  1.5358362,    0.6981953,   0.23165298,   0.51040155,
        2.4328363,    0.2267083,     6.4758024,    5.72882,     -0.8707881,   -1.110683,
        0.12478554,   1.3484334,     0.3689712,    0.29180524,  -0.8149491,   -0.0922713,
        -0.33161288,  0.78140867,    -0.9623072,   0.8999919,   -2.1120539,   0.84492886,
        -1.5347936,   0.7440938,     1.3312622,    -1.0220959,  3.8123238,    5.62084,
        1.3551373,    0.6460793,     -0.21639234,  -1.2077228,  1.1639122,    -0.05263084,
        0.48105645,   -0.5892652,    0.2349168,    1.128768,    0.42568994,   0.36398163,
        -1.2250046,   2.3513904,     0.64331245,   0.8099514,   1.1574583,    0.8668997,
        5.59726,      5.659527,      0.48095328,   0.59446967,  1.1849049,    1.4709316,
        -1.2589264,   -0.11577609,   0.6299068,    -1.4621243,  0.7872094,    0.18096408,
        0.5553762,    -2.0060503,    -0.4373122,   0.9938256,   0.89633095,   -0.5491595,
        0.8428093,    0.084472984,   4.52676,      4.351716,    0.73079205,   0.8098516,
        0.27877963,   -0.0073297992, 0.36545974,   0.6745955,   -2.3818088,   1.5816333,
        -0.16544427,  0.51321346,    -0.23699868,  -0.13254744, 1.551896,     0.62098134,
        0.7739359,    1.6108581,     0.36288044,   -0.42423314, 5.0995026,    5.1843014,
        -1.1968713,   1.1790991,     -0.018864498, -0.7500831,  0.0879575,    0.22010106,
        1.1136081,    2.2893274,     -0.6877146,   -0.40740123, 0.046427906,  0.8681825,
        -0.50678635,  0.23051873,    0.35328788,   -0.45622703, 0.1495475,    -0.104907334,
        4.8094087,    5.2818966,     0.49697292,   0.29568392,  -0.4144543,   -0.64546454,
        0.31737912,   -0.8962374,    -1.0404948,   0.91764164,  0.6826862,    0.08073502,
        0.33942595,   0.053232975,   -1.1867946,   0.51120156,  -1.1452568,   -1.4197243,
        0.82389224,   1.8939058,     6.882805,     6.4072084,   -1.3024135,   -0.22483894,
        -0.22082287,  1.0370905,     -0.7639439,   0.6950346,   -0.731326,    0.16821115,
        0.0887468,    -0.5732441,    -0.40715322,  -0.96244293, -0.89126545,  1.3140129,
        -0.42358512,  1.7674587,     -0.6400819,   -1.6113993,  4.4106574,    5.706909,
        -1.1110737,   0.10560027,    -1.1108764,   0.34190884,  2.1167603,    -0.067495525,
        -0.16237324,  0.2604496,     -0.8129095,   -0.42274237, -1.1412699,   -0.0011268258,
        -0.63462454,  -0.15172139,   -0.7164279,   0.14801888,  -0.3538928,   1.583736,
        4.9876184,    4.2879796,     -0.8491325,   0.5345522,   -0.60507995,  -0.9020085,
        1.0447598,    0.21135187,    -0.4787205,   -0.3230412,  0.8076494,    -0.04361339,
        0.62797767,   0.15487206,    -0.23772183,  0.69546384,  1.8609382,    -1.7030516,
        1.2658813,    -0.6791475,    4.921037,     4.8929176,   -0.0124401,   -0.6873918,
        -0.21879943,  -0.48610657,   0.36776963,   0.12423802,  -0.7854952,   0.48838156,
        -0.5085067,   -0.08865434,   1.1653454,    0.81965554,  -0.6399579,   -1.0967884,
        1.4099771,    -0.15370974,   2.8824244,    1.0534087,   4.7045717,    5.2045445,
        -0.6350576,   2.5321684,     0.6987691,    -0.53839976, -0.09889791,  0.5662097,
        0.4088725,    0.635128,      -1.763303,    -0.49720347, -1.0772469,   1.2422445,
        -0.3619956,   -1.311133,     1.5846866,    1.0530244,   -0.61141044,  0.74831486,
        5.433625,     3.9661994,     2.006918,     -0.8703619,  -0.7658511,   0.0811044,
        0.83877516,   -0.63553256,   -0.67563355,  1.7368636,   0.9372277,    1.8246815,
        0.8615329,    -0.18161502,   0.62479717,   0.2028623,   0.159001,     1.860977,
        0.04177074,   -0.49050322,   4.9402246,    4.0296063,   -0.74729615,  -0.27802998,
        -0.8077982,   -0.5414143,    0.467114,     0.9016136,   2.1971147,    -1.466963,
        -1.2350414,   1.0967304,     -0.95607626,  0.51462483,  0.28838068,   1.0117096,
        -0.21846394,  0.114624545,   -1.627146,    -0.9431294};

    auto dft_output = backend->create_tensor(element::f32, Shape{2, 10, 10, 2});

    auto backend_data = backend->create_tensor(element::f32, Shape{2, 10, 10, 2});
    copy_data(backend_data, input_data);

    auto handle = backend->compile(f);

    std::cout << "nGraph function for DFT was successfully compiled.\n";
    handle->call({dft_output}, {backend_data});
    std::cout << "nGraph function for DFT was successfully calculated.\n";

    EXPECT_TRUE(test::all_close_f(
        expected_dft1d_results, read_vector<float>(dft_output), MIN_FLOAT_TOLERANCE_BITS));
}
