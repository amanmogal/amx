jobs:
- job: nGraph_ONNX_Lin

  # About 150% of total time
  timeoutInMinutes: 240

  pool:
    name: LIN_VMSS_VENV_F8S_WE

  variables:
    system.debug: true
    VSTS_HTTP_RETRY: 5
    VSTS_HTTP_TIMEOUT: 200
    WORKERS_NUMBER: 8
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    WORK_DIR: $(Pipeline.Workspace)/_w
    MODELS_DIR: /mnt/onnxtestdata/models
    TMP_DIR: /mnt/tmp

  steps:
  - script: |
      curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2019-06-01"
      whoami
      uname -a
      echo Python3 info ; which python3 ; python3 --version
      echo Python info ; which python ; python --version
      echo Java info ; which java ; java -version
      echo gcc info ; which gcc ; gcc --version
      lsb_release
      env
      cat /proc/cpuinfo
      cat /proc/meminfo
      cat /etc/fstab
      vmstat -s
      df
      lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
      free -h
    displayName: 'System info'

  - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      sudo rm -rf $(TMP_DIR) ; sudo mkdir $(TMP_DIR) ; sudo chmod 777 -R $(TMP_DIR)
    displayName: 'Make dir'

  - script: sudo fallocate -l 15G /swapfile ; sudo chmod 777 /swapfile ; sudo mkswap /swapfile ; sudo swapon /swapfile ; free -h
    displayName: 'Create a swap and display swap space'
    enabled: true

  - checkout: self
    clean: true
    lfs: false
    submodules: recursive
    path: openvino

  - script: |
      #ngraph/python/tests/test_onnx/model_zoo_preprocess.sh -m $(TMP_DIR) -c -f
      ngraph/python/tests/test_onnx/model_zoo_preprocess.sh -d $(TMP_DIR) -o
    displayName: 'Clone ONNX models'
    enabled: false

  - task: CMake@1
    inputs:
      # CMake must get Python 3.x version by default
      cmakeArgs: -GNinja -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DENABLE_VPU=OFF -DENABLE_GNA=OFF -DENABLE_OPENCV=OFF -DENABLE_CPPLINT=OFF -DENABLE_TESTS=OFF -DENABLE_MKL_DNN=ON -DENABLE_CLDNN=OFF -DENABLE_PROFILING_ITT=OFF -DENABLE_SAMPLES=OFF -DENABLE_SPEECH_DEMO=OFF -DENABLE_PYTHON=ON -DPYTHON_EXECUTABLE=/usr/bin/python3.6 -DNGRAPH_ONNX_IMPORT_ENABLE=ON -DNGRAPH_INTERPRETER_ENABLE=ON -DNGRAPH_DEBUG_ENABLE=OFF -DNGRAPH_DYNAMIC_COMPONENTS_ENABLE=ON -DCMAKE_INSTALL_PREFIX=$(INSTALL_DIR) $(REPO_DIR)
      workingDirectory: $(BUILD_DIR)
    enabled: false

  - script: |
      rm -rf $(MODELS_DIR)/onnx_model_zoo
      cp -rf $(TMP_DIR)/model_zoo/onnx_model_zoo/ $(MODELS_DIR)/onnx_model_zoo/
    displayName: 'Copy ONNX models'
    enabled: false

  - script: |
      wget -O "$(TMP_DIR)/msft.zip" https://onnxruntimetestdata.blob.core.windows.net/models/20191107.zip
      unzip "$(TMP_DIR)/msft.zip" -d "$(TMP_DIR)/msft"
    displayName: 'Get MSFT models'
    enabled: false

  - script: |
      rm -rf $(MODELS_DIR)/msft
      cp -rf $(TMP_DIR)/msft/ $(MODELS_DIR)/msft/20191107/
    displayName: 'Copy MSFT models'
    enabled: false

  - script: ls -alR $(MODELS_DIR)
    displayName: 'List $(MODELS_DIR)'
    enabled: false

  - script: docker build --tag=openvino-onnx-ci-image --file=.ci/openvino-onnx/Dockerfile .
    displayName: 'Docker build'
    enabled: true

  - script: |
      #docker run --name openvino-onnx-ci-container --volume $(MODELS_DIR):/root/.onnx/model_zoo --volume $(MODELS_DIR)/msft:/root/.onnx/model_zoo/MSFT openvino-onnx-ci-image
      docker run --name openvino-onnx-ci-container --volume $(TMP_DIR)/model_zoo:/root/.onnx/model_zoo openvino-onnx-ci-image
    displayName: 'Docker run'
    enabled: true

