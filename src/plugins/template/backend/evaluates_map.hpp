// Copyright (C) 2018-2023 Intel Corporation
// SPDX-License-Identifier: Apache-2.0
//

#pragma once
#include "backend.hpp"
#include "ngraph/node.hpp"
#include "ngraph/ops.hpp"
#include "ngraph/runtime/reference/abs.hpp"
#include "ngraph/runtime/reference/adaptive_avg_pool.hpp"
#include "ngraph/runtime/reference/adaptive_max_pool.hpp"
#include "ngraph/runtime/reference/avg_pool.hpp"
#include "ngraph/runtime/reference/batch_norm.hpp"
#include "ngraph/runtime/reference/binary_convolution.hpp"
#include "ngraph/runtime/reference/bucketize.hpp"
#include "ngraph/runtime/reference/ceiling.hpp"
#include "ngraph/runtime/reference/convert.hpp"
#include "ngraph/runtime/reference/convert_color_nv12.hpp"
#include "ngraph/runtime/reference/convolution.hpp"
#include "ngraph/runtime/reference/ctc_greedy_decoder.hpp"
#include "ngraph/runtime/reference/ctc_greedy_decoder_seq_len.hpp"
#include "ngraph/runtime/reference/ctc_loss.hpp"
#include "ngraph/runtime/reference/cum_sum.hpp"
#include "ngraph/runtime/reference/deformable_convolution.hpp"
#include "ngraph/runtime/reference/deformable_psroi_pooling.hpp"
#include "ngraph/runtime/reference/detection_output.hpp"
#include "ngraph/runtime/reference/einsum.hpp"
#include "ngraph/runtime/reference/elu.hpp"
#include "ngraph/runtime/reference/embedding_bag_offsets_sum.hpp"
#include "ngraph/runtime/reference/embedding_bag_packed_sum.hpp"
#include "ngraph/runtime/reference/embedding_segments_sum.hpp"
#include "ngraph/runtime/reference/equal.hpp"
#include "ngraph/runtime/reference/exp.hpp"
#include "ngraph/runtime/reference/experimental_detectron_detection_output.hpp"
#include "ngraph/runtime/reference/experimental_detectron_prior_grid_generator.hpp"
#include "ngraph/runtime/reference/experimental_detectron_proposal_single_image.hpp"
#include "ngraph/runtime/reference/experimental_detectron_roi_feature_extractor.hpp"
#include "ngraph/runtime/reference/experimental_detectron_topk_rois.hpp"
#include "ngraph/runtime/reference/extract_image_patches.hpp"
#include "ngraph/runtime/reference/fft.hpp"
#include "ngraph/runtime/reference/gather.hpp"
#include "ngraph/runtime/reference/gather_elements.hpp"
#include "ngraph/runtime/reference/gather_nd.hpp"
#include "ngraph/runtime/reference/gather_tree.hpp"
#include "ngraph/runtime/reference/gelu.hpp"
#include "ngraph/runtime/reference/generate_proposal.hpp"
#include "ngraph/runtime/reference/greater.hpp"
#include "ngraph/runtime/reference/grid_sample.hpp"
#include "ngraph/runtime/reference/grn.hpp"
#include "ngraph/runtime/reference/group_convolution.hpp"
#include "ngraph/runtime/reference/group_convolution_backprop_data.hpp"
#include "ngraph/runtime/reference/gru_cell.hpp"
#include "ngraph/runtime/reference/hard_sigmoid.hpp"
#include "ngraph/runtime/reference/if.hpp"
#include "ngraph/runtime/reference/interpolate.hpp"
#include "ngraph/runtime/reference/irdft.hpp"
#include "ngraph/runtime/reference/is_finite.hpp"
#include "ngraph/runtime/reference/is_inf.hpp"
#include "ngraph/runtime/reference/is_nan.hpp"
#include "ngraph/runtime/reference/log.hpp"
#include "ngraph/runtime/reference/log_softmax.hpp"
#include "ngraph/runtime/reference/lrn.hpp"
#include "ngraph/runtime/reference/lstm_cell.hpp"
#include "ngraph/runtime/reference/matrix_nms.hpp"
#include "ngraph/runtime/reference/mod.hpp"
#include "ngraph/runtime/reference/multiclass_nms.hpp"
#include "ngraph/runtime/reference/mvn.hpp"
#include "ngraph/runtime/reference/non_max_suppression.hpp"
#include "ngraph/runtime/reference/normalize_l2.hpp"
#include "ngraph/runtime/reference/pad.hpp"
#include "ngraph/runtime/reference/prelu.hpp"
#include "ngraph/runtime/reference/prior_box.hpp"
#include "ngraph/runtime/reference/proposal.hpp"
#include "ngraph/runtime/reference/psroi_pooling.hpp"
#include "ngraph/runtime/reference/rdft.hpp"
#include "ngraph/runtime/reference/region_yolo.hpp"
#include "ngraph/runtime/reference/reorg_yolo.hpp"
#include "ngraph/runtime/reference/reverse_sequence.hpp"
#include "ngraph/runtime/reference/rnn_cell.hpp"
#include "ngraph/runtime/reference/roi_align.hpp"
#include "ngraph/runtime/reference/roi_pooling.hpp"
#include "ngraph/runtime/reference/scatter_nd_update.hpp"
#include "ngraph/runtime/reference/selu.hpp"
#include "ngraph/runtime/reference/sequences.hpp"
#include "ngraph/runtime/reference/sigmoid.hpp"
#include "ngraph/runtime/reference/sign.hpp"
#include "ngraph/runtime/reference/softsign.hpp"
#include "ngraph/runtime/reference/squared_difference.hpp"
#include "ngraph/runtime/reference/tanh.hpp"
#include "ngraph/runtime/reference/tensor_iterator.hpp"
#include "ngraph/runtime/reference/unique.hpp"
#include "ngraph/runtime/reference/utils/nms_common.hpp"
#include "ov_ops/augru_cell.hpp"
#include "ov_ops/augru_sequence.hpp"
#include "tensor_conversion_util.hpp"

namespace ngraph {
namespace runtime {
namespace interpreter {
using EvaluatorsMap = std::map<ngraph::NodeTypeInfo,
                               std::function<bool(const std::shared_ptr<ngraph::Node>& node,
                                                  const ngraph::HostTensorVector& outputs,
                                                  const ngraph::HostTensorVector& inputs)>>;
EvaluatorsMap& get_evaluators_map();
}  // namespace interpreter
}  // namespace runtime
}  // namespace ngraph
