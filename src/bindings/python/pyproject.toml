[project]
version = "2024.0"  # TODO: update automatically?
requires-python = ">=3.8,<3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]
# TODO:
# description = ""
# readme = "README.md"
# authors = [
#     {name = "OpenVINO", email = "openvino_pushbot@intel.com"},
# ]
# license = {text = ""}
# classifiers = [
#     "License :: ",
#     ...
# ]
dependencies = [
    "numpy >= 1.22.4",
    "openvino-telemetry>=2023.2.1",
]

[project.optional-dependencies]
# Build and wheel dependencies:
build = [
    "setuptools >= 65.6.1",
    "patchelf <= 0.17.2.1; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "wheel >= 0.38.1",
]

[tool.pdm.dev-dependencies]  # will either need --dev or --prod usage
torchvision = [
    "torch>=1.13",
    "torchvision; platform_machine == 'arm64' and python_version >= '3.8'",
    "torchvision; platform_machine != 'arm64'",
    "pillow>=9.0",
]

linters = [
    "black",
    "flake8",
    "flake8-annotations-complexity",
    "flake8-broken-line",
    "flake8-bugbear",
    "flake8-class-attributes-order",
    "flake8-comprehensions",
    "flake8-debugger",
    "flake8-docstrings",
    "flake8-eradicate",
    "flake8-executable",
    "flake8-expression-complexity",
    "flake8-print",
    "flake8-pytest-style",
    "flake8-rst-docstrings",
    "flake8-string-format",
    "flake8-variables-names",
    "flake8_builtins",
    "flake8_coding",
    "flake8_pep3101",
    "flake8_quotes",
    "mypy",
    "Pep8-naming",
    "pydocstyle",
]
tests = [
    "numpy>=1.22.4,<1.26",  # Range of numpy for testing
    # Frontends: TBD split of them
    "protobuf>=3.18.1,<4.0.0",
    "onnx==1.14.1",
    "torch",
    "torchvision; platform_machine == 'arm64' and python_version >= '3.8'",
    "torchvision; platform_machine != 'arm64'",
    "sympy; platform_machine == 'arm64' and python_version >= '3.8'",
    "sympy; platform_machine != 'arm64'",
    "pillow",
    # Testing:
    "bandit",
    "pytest>=5.0,<7.5",
    "pytest-forked; sys_platform != 'win32'",
    "pytest-xdist",
    "pytest-html==4.1.1",
    # Utils:
    "pygments>=2.8.1",
    "py>=1.9.0",
    "radon",
    "retrying",
    "tox",
    "types-pkg_resources",
    "wheel >= 0.38.1",
]

tests_mo = [
    "mxnet~=1.2.0; sys_platform == 'win32'",
    "mxnet>=1.7.0.post2,<=1.9.1; sys_platform != 'win32'",
    "onnx>=1.8.1,<=1.15.0",
    "networkx<=3.1.0",
    "pytest>=5.0,<7.3",
    "protobuf>=3.18.1,<4.0.0",
    "defusedxml>=0.7.1",
    "requests>=2.25.1",
    "fastjsonschema>=2.15.1,<2.18",
    "coverage>=4.4.2,<=7.0.5",
    "astroid>=2.9.0",
    "pylint>=2.7.0",
    "pyenchant>=3.0.0",
    "test-generator==0.1.2",
    "py>=1.9.0",
    "urllib3>=1.26.4",
    "openvino-telemetry>=2023.2.1",
]

tests_layer = [
    "numpy>=1.16.6,<1.27",
    "onnxruntime",
    "requests>=2.25.1",
    "torch>=1.13,<2.3",
    "torchvision",
    "transformers",
    "packaging",
    "pytest>=5.0,<7.5",
    "tensorflow-addons; python_version <= '3.10'",
    "jax<=0.4.14; sys_platform == 'linux' and platform_machine == 'x86_64'", # https://jax.readthedocs.io/en/latest/installation.html#pip-installation-cpu - wheels are for "x86_64" only
    "jaxlib<=0.4.14; sys_platform == 'linux' and platform_machine == 'x86_64'", # https://jax.readthedocs.io/en/latest/installation.html#pip-installation-cpu - wheels are for "x86_64" only
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
###
# Tools configs
###
[tool.pdm]
plugins = [
    "-e file:///${PROJECT_ROOT}/pdm-custom-plugins/"
]

[tool.pdm.scripts]
ov-runtime-tests = "pytest ./tests/test_runtime/"  # try to add -s -v into cli!

[tool.black]
line-length = 160
include = '\.pyi?$'
