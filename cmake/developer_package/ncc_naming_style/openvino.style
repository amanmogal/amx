# custom OpenVINO values
CppMethod: '^(operator\W+|[a-z_\d]+|signaling_NaN|quiet_NaN)$'
# TODO: remove stopwatch|unsupported_op
ClassName: '^([A-Z][\w]+|b?float16|numeric_limits|ngraph_error|stopwatch|unsupported_op)$'
# TODO: remove oi_pair
StructName: '^([A-Z][\w]+|element_type_traits|hash|oi_pair)$'
FunctionName: '^(operator\W+|[a-z_\d]+)$'
Namespace: '^[a-z\d_]+$'
NamespaceAlias: '^[a-z\d_]+$'
UnionName: '[A-Z][\w]+$'
TemplateTemplateParameter: '[A-Z][\w]+'
NamespaceReference: '^[a-z\d_]+$'

# TODO: align
EnumConstantName: '^.*$'
EnumName: '^.*$'
TypeAliasName: '^.*$'

# TODO: try
FunctionTemplate: '^.*$'
ClassTemplate: '^.*$'
TypedefName: '^.*$'
ParameterName: '^.*$'
TemplateNonTypeParameter: '^.*$'
TemplateTypeParameter: '^.*$'

# default values
ClassTemplatePartialSpecialization: ''
ConversionFunction: ''
UsingDirective: ''
UsingDeclaration: ''
ClassAccessSpecifier: '^.*$' # looks like can be fixed
TypeReference: '^.*$' # looks like can be fixed
CxxBaseSpecifier: '^.*$' # looks like can be fixed
TemplateReference: '^.*$'
MemberReference: '^.*$'
LabelReference: ''
OverloadedDeclarationReference: '^.*$'
VariableReference: ''
InvalidFile: ''
NoDeclarationFound: ''
NotImplemented: ''
InvalidCode: ''
UnexposedExpression: ''
DeclarationReferenceExpression: '^.*$'
MemberReferenceExpression: '^.*$'
CallExpression: '^.*$'
BlockExpression: ''
IntegerLiteral: ''
FloatingLiteral: ''
ImaginaryLiteral: ''
StringLiteral: '^.*$'
CharacterLiteral: ''
ParenExpression: '^.*$'
UnaryOperator: ''
ArraySubscriptExpression: ''
BinaryOperator: ''
CompoundAssignmentOperator: ''
ConditionalOperator: ''
CstyleCastExpression: ''
CompoundLiteralExpression: ''
InitListExpression: ''
AddrLabelExpression: ''
StatementExpression: ''
GenericSelectionExpression: ''
GnuNullExpression: ''
CxxStaticCastExpression: ''
CxxDynamicCastExpression: ''
CxxReinterpretCastExpression: ''
CxxConstCastExpression: ''
CxxFunctionalCastExpression: ''
CxxTypeidExpression: ''
CxxBoolLiteralExpression: ''
CxxNullPointerLiteralExpression: ''
CxxThisExpression: ''
CxxThrowExpression: ''
CxxNewExpression: ''
CxxDeleteExpression: ''
CxxUnaryExpression: ''
PackExpansionExpression: ''
SizeOfPackExpression: ''
LambdaExpression: ''
ObjectBoolLiteralExpression: ''
ObjectSelfExpression: ''
UnexposedStatement: ''
LabelStatement: ''
CompoundStatement: ''
CaseStatement: ''
DefaultStatement: ''
IfStatement: ''
SwitchStatement: ''
WhileStatement: ''
DoStatement: ''
ForStatement: ''
GotoStatement: ''
IndirectGotoStatement: ''
ContinueStatement: ''
BreakStatement: ''
ReturnStatement: ''
AsmStatement: ''
CxxCatchStatement: ''
CxxTryStatement: ''
CxxForRangeStatement: ''
MsAsmStatement: ''
NullStatement: ''
DeclarationStatement: ''
TranslationUnit: ''
UnexposedAttribute: ''
CxxFinalAttribute: ''
CxxOverrideAttribute: ''
AnnotateAttribute: ''
AsmLabelAttribute: ''
PackedAttribute: ''
PureAttribute: ''
ConstAttribute: ''
NoduplicateAttribute: ''
PreprocessingDirective: ''
MacroDefinition: ''
MacroInstantiation: ''
InclusionDirective: ''
VariableName:
    ScopePrefix:
        Global: ''
        Static: ''
        ClassMember: ''
    DataTypePrefix:
        String: ''
        Integer: ''
        Bool: ''
        Pointer: ''
    Pattern: '^.*$'
