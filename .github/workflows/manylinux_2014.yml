name: Manylinux 2014
on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - 'releases/**'

concurrency:
  # github.ref is not unique in post-commit
  group: ${{ github.event_name == 'push' && github.run_id || github.ref }}-manylinux-2014
  cancel-in-progress: true

permissions: read-all

jobs:
  Build:
    timeout-minutes: 120
    defaults:
      run:
        shell: bash
    runs-on: aks-linux-16-cores-32gb
    if: ${{ github.repository_owner == 'openvinotoolkit' }}
    container:
      image: openvinogithubactions.azurecr.io/dockerhub/ubuntu:22.04
      volumes:
        - /mount:/mount
      options: -e SCCACHE_AZURE_BLOB_CONTAINER -e SCCACHE_AZURE_CONNECTION_STRING
    env:
      CMAKE_BUILD_TYPE: 'RelWithDebInfo'
      CMAKE_GENERATOR: 'Ninja'
      GITHUB_WORKSPACE: '/__w/openvino/openvino'
      OPENVINO_REPO: /__w/openvino/openvino/openvino
      OPENVINO_CONTRIB_REPO: /__w/openvino/openvino/openvino_contrib
      INSTALL_DIR: /__w/openvino/openvino/openvino_install
      INSTALL_TEST_DIR: /__w/openvino/openvino/tests_install
      BUILD_DIR: /__w/openvino/openvino/openvino_build
      CMAKE_CXX_COMPILER_LAUNCHER: sccache
      CMAKE_C_COMPILER_LAUNCHER: sccache
      SCCACHE_IGNORE_SERVER_IO_ERROR: 1
      SCCACHE_SERVER_PORT: 35555
      SCCACHE_ERROR_LOG: /__w/openvino/sccache_log.txt
      SCCACHE_LOG: warn
      SCCACHE_AZURE_KEY_PREFIX: manylinux_2014_${{ matrix.SANITIZER }}_master
      SCCACHE_CACHE_SIZE: 50G

    steps:
      - name: Clone OpenVINO
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: ${{ env.OPENVINO_REPO }}
          submodules: 'true'

      - name: System info
        uses: ./openvino/.github/actions/system_info
                 
      # - name: Install python dependencies
      #   run: |
      #     # For Python API: build and wheel packaging
      #     python3 -m pip install -r ${OPENVINO_REPO}/src/bindings/python/wheel/requirements-dev.txt

      - name: Build (inside container)
        run: |
          docker run --rm -v $GITHUB_WORKSPACE -w $GITHUB_WORKSPACE quay.io/pypa/manylinux2014_x86_64 /bin/bash -c "
          # steps
          python3 -m pip install -r ${OPENVINO_REPO}/src/bindings/python/wheel/requirements-dev.txt
          cmake -G ${CMAKE_GENERATOR} -DENABLE_CPPLINT=OFF -DENABLE_NCC_STYLE=OFF -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_SHARED_LIBS=ON -DENABLE_WHEEL=ON -S ${OPENVINO_REPO} -B ${BUILD_DIR}
          cmake --build ${BUILD_DIR} --parallel $(nproc) --config ${CMAKE_BUILD_TYPE}
          cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -P ${BUILD_DIR}/cmake_install.cmake --config ${CMAKE_BUILD_TYPE}
      #
      # Build
      #
      # - name: Clean sccache stats
      #   run: ${SCCACHE_PATH} --zero-stats
             
      # - name: CMake configure - OpenVINO
      #   run: |
      #     cmake \
      #       -G "${{ env.CMAKE_GENERATOR }}" \
      #       -DENABLE_CPPLINT=OFF \
      #       -DENABLE_NCC_STYLE=OFF \
      #       -DCMAKE_VERBOSE_MAKEFILE=ON \
      #       -DBUILD_SHARED_LIBS=ON \
      #       -DENABLE_WHEEL=ON \
      #       -S ${OPENVINO_REPO} \
      #       -B ${BUILD_DIR}

      # - name: Cmake build - OpenVINO
      #   run: |
      #     cmake --build ${BUILD_DIR} --parallel $(nproc) --config ${{ env.CMAKE_BUILD_TYPE }}
          
      # - name: Show sccache stats
      #   run: ${SCCACHE_PATH} --show-stats
        
      # - name: Cmake install - OpenVINO
      #   run: |
      #     cmake -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR} -P ${BUILD_DIR}/cmake_install.cmake --config ${{ env.CMAKE_BUILD_TYPE }}

      - name: Pack Artifacts
        run: tar -cvf - * | pigz > ${BUILD_DIR}/openvino_package.tar.gz
        working-directory: ${{ env.INSTALL_DIR }}


      #
      # Upload build artifacts
      #
      - name: Upload sccache log
        if: ${{ always() }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: sccache_log_${{ matrix.SANITIZER }}
          path: ${{ env.SCCACHE_ERROR_LOG }}
          if-no-files-found: 'error'

      - name: Upload openvino package
        if: ${{ always() }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: openvino_package_${{ matrix.SANITIZER }}
          path: ${{ env.BUILD_DIR }}/openvino_package.tar.gz
          if-no-files-found: 'error'