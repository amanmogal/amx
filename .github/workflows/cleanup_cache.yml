name: cleanup caches
on:
  pull_request:
    types:
      - closed

jobs:
  cleanup:
    runs-on: ubuntu-latest

    permissions:
      # `actions:write` permission is required to delete caches
      actions: write
      contents: read

    steps:
      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache

          REPO=${{ github.repository }}
          BRANCH="refs/pull/${{ github.event.pull_request.number }}/merge"

          echo "Fetching list of cache key for ${BRANCH}"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH -L 100 | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys.
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done

          BRANCH="master"
          KEYS=( "ccache-linux-ubuntu" "ccache-Build-linux-debian" "ccache-Build-linux-android" "ccache-Build-linux-arm64")
          for cache_key in ${KEYS[@]}
          do
            echo "Fetching list of cache key ${cache_key} for ${BRANCH}"
            cacheKeysForPR=( $(gh actions-cache list -R $REPO -B $BRANCH -L 100 --key $cache_key --sort created-at --order desc | cut -f 1) )
            echo "${cacheKeysForPR[@]}"
            cacheKeysForPRSliced=("${cacheKeysForPR[@]:1}")
            echo "${cacheKeysForPRSliced[@]}"
            ## Setting this to not fail the workflow while deleting cache keys.
            set +e
            if [[ ${#ArrayName[@]} -gt 0 ]]
            then
              echo "Deleting caches..."
              for cacheKey in ${cacheKeysForPRSliced[@]}
              do
                if [[ ! -z "$cacheKey" ]]
                then
                  # gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
                  echo "${cacheKey}"
                fi
              done
            fi
          done

          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}