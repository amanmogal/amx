name: Code coverage
on:
  push:
    branches:
      - master
      - releases/*
    paths-ignore:
      - docs/
      - /**/docs/*
      - /**/*.md
      - README.md
      - /**/layer_tests_summary/**
  pull_request:
    branches:
      - master
      - releases/*
    paths-ignore:
      - docs/
      - /**/docs/*
      - /**/*.md
      - README.md
      - /**/layer_tests_summary/**
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Coverage:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++" }

    steps:
      - name: Clone OpenVINO
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup GNinja
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.10.2

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Install lcov dependency
        run: |
          sudo apt --assume-yes update
          sudo apt --assume-yes install lcov

      - name: ls all
        run:  ls -laR .

      - name: Build OpenVINO with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          source-dir: ${{ runner.workspace }}
          build-dir: ${{ runner.workspace }}/build
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          configure-options: -GNinja -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_COMPILE_WARNING_AS_ERROR=ON -DENABLE_INTEL_MYRIAD_COMMON=OFF -DENABLE_FASTER_BUILD=ON -DENABLE_OV_ONNX_FRONTEND=ON -DENABLE_TESTS=ON -DENABLE_COVERAGE=ON -DENABLE_INTEL_GPU=OFF -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_LINKER_LAUNCHER=ccache -DCMAKE_CXX_LINKER_LAUNCHER=ccache
          build-type: Release
          target: all
          parallel: $(nproc --all)
          run-test: true
          ctest-options: -V -L OV IR_FE TF_FE ONNX_FE PADDLE_FE

      - name: ls all
        run:  ls -laR .

      - name: Build coverage with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          configure-options: -GNinja -- -C ${{ runner.workspace }}/build
          target: ov_coverage

      - name: Generate raport
        run: |
          lcov --capture --directory . --output-file coverage.info
          genhtml coverage.info --output-directory coverage-report

      - name: Collect coverage
        uses: codecov/codecov-action@v3
        with:
          verbose: true
