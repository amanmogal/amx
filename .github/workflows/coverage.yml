name: Code coverage
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Github workspace
        run: echo "$GITHUB_WORKSPACE"
      
      - name: Install python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'


      - name: Clone OpenVINO
        uses: actions/checkout@v3
        with:
          submodules: recursive
          lfs: true
          fetch-depth: 0
      
      - name: Install lcov dependency
        run: |
          sudo apt --assume-yes update
          sudo apt --assume-yes install lcov
      
      - name: Install dependencies
        run: |
          chmod +x install_build_dependencies.sh
          sudo ./install_build_dependencies.sh
          pip install -r src/bindings/python/src/compatibility/openvino/requirements-dev.txt
          pip install -r src/frontends/tensorflow/tests/requirements.txt
          pip install -r src/frontends/tensorflow_lite/tests/requirements.txt
          pip install -r src/frontends/paddle/tests/requirements.txt
          mkdir build

      - name: Build OpenVINO
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release \
                -DENABLE_FASTER_BUILD=ON \
                -DENABLE_TESTS=ON \
                -DENABLE_PYTHON=ON \
                -DENABLE_COVERAGE=ON \
                -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/ia32.linux.toolchain.cmake \
                -DENABLE_INTEL_GPU=OFF \
                -B build
          cmake --build build --target all --jobs=$(nproc -all)

      - name: ls all
        run:  ls -laR .

      - name:  Run IR
        run: ctest -V -L IR_FE
      
      - name: Run ONNX_FE
        run: ctest -V -L ONNX_FE

      - name: Run PADDLE_FE
        run: ctest -V -L PADDLE_FE

      - name: Run TF_FE
        run: ctest -V -L TF_FE

      - name: Run CPU
        run: ctest -V -L CPU

      - name: Run GPU
        run: ctest -V -L GPU

      - name: Run GNA
        run: ctest -V -L GNA

      - name: Build coverage
        run:  cmake --build build --target ov_coverage

      - name: ls files
        run: ls -laR

      - name: Generate raport
        run: |
          lcov --capture --directory . --output-file coverage.info
          genhtml coverage.info --output-directory coverage-report 

      - name: Collect coverage
        uses: codecov/codecov-action@v3
        with:
          verbose: true
