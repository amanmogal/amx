name: Code coverage
on:
  push:
    branches:
      - master
      - releases/*
    paths-ignore:
      - docs/
      - /**/docs/*
      - /**/*.md
      - README.md
      - /**/layer_tests_summary/**
  pull_request:
    branches:
      - master
      - releases/*
    paths-ignore:
      - docs/
      - /**/docs/*
      - /**/*.md
      - README.md
      - /**/layer_tests_summary/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Coverage:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Ubuntu gcc", os: ubuntu-latest-16-cores, cc: "gcc", cxx: "g++" }

    steps:
      - name: Clone OpenVINO
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 50G

      - name: Install build dependencies
        run: |
          sudo apt --assume-yes update
          sudo -E ${{ github.workspace }}/install_build_dependencies.sh
          sudo apt --assume-yes install lcov
      
      - name: Install python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r $(REPO_DIR)/src/bindings/python/wheel/requirements-dev.txt
          python3 -m pip install -r $(REPO_DIR)/src/bindings/python/requirements.txt
          # For running Python API tests
          python3 -m pip install -r $(REPO_DIR)/src/bindings/python/src/compatibility/openvino/requirements-dev.txt
          # For running Paddle frontend unit tests
          python3 -m pip install -r $(REPO_DIR)/src/frontends/paddle/tests/requirements.txt
          # For running ONNX frontend unit tests
          python3 -m pip install -r $(REPO_DIR)/src/frontends/onnx/tests/requirements.txt
          # For running TensorFlow frontend unit tests
          python3 -m pip install -r $(REPO_DIR)/src/frontends/tensorflow/tests/requirements.txt
          # For MO unit tests
          python3 -m pip install -r $(REPO_DIR)/tools/mo/requirements_mxnet.txt
          python3 -m pip install -r $(REPO_DIR)/tools/mo/requirements_caffe.txt
          python3 -m pip install -r $(REPO_DIR)/tools/mo/requirements_kaldi.txt
          python3 -m pip install -r $(REPO_DIR)/tools/mo/requirements_onnx.txt
          python3 -m pip install -r $(REPO_DIR)/tools/mo/requirements_tf2.txt
          python3 -m pip install -r $(REPO_DIR)/tools/mo/requirements_dev.txt
          
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Build OpenVINO with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          configure-options: >
            -GNinja
            -DCMAKE_VERBOSE_MAKEFILE=ON
            -DENABLE_FASTER_BUILD=ON
            -DENABLE_TESTS=ON
            -DENABLE_COVERAGE=ON
            -DCMAKE_C_COMPILER_LAUNCHER=ccache
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
            -DCMAKE_C_LINKER_LAUNCHER=ccache
            -DCMAKE_CXX_LINKER_LAUNCHER=ccache
          build-type: Release
          run-test: false
          parallel: ${{ steps.cpu-cores.outputs.count }}
      
      - name: Run OV core unit tests
        run: . ${{ github.workspace }}/scripts/setupvars/setupvars.sh -pyver 3.10 && ${{ github.workspace }}/bin/intel64/Release/ov_core_unit_tests # --gtest_print_time=1 --gtest_filter=-*IE_GPU* --gtest_output=xml:${{ github.workspace }}/testdata/TEST-NGraphUT.xml
        continue-on-error: true

      - name: Run IR frontend tests
        run: . ${{ github.workspace }}/scripts/setupvars/setupvars.sh -pyver 3.10 && ${{ github.workspace }}/bin/intel64/Release/ov_ir_frontend_tests # --gtest_print_time=1 --gtest_output=xml:${{ github.workspace }}/testdata/TEST-IRFrontend.xml
        continue-on-error: true
      
      - name: Run ONNX frontend tests
        run: . ${{ github.workspace }}/scripts/setupvars/setupvars.sh -pyver 3.10 && ${{ github.workspace }}/bin/intel64/Release/ov_onnx_frontend_tests --gtest_filter=-*IE_GPU*
        continue-on-error: true
      
      - name: Run Paddle frontend unit tests
        run: . ${{ github.workspace }}/scripts/setupvars/setupvars.sh -pyver 3.10 && ${{ github.workspace }}/bin/intel64/Release/paddle_tests --gtest_filter=-*IE_GPU*
        continue-on-error: true

      - name: Run TensorFlow frontend unit tests
        run: . ${{ github.workspace }}/scripts/setupvars/setupvars.sh -pyver 3.10 && ${{ github.workspace }}/bin/intel64/Release/ov_tensorflow_frontend_tests --gtest_filter=-*IE_GPU*
        continue-on-error: true

      - name: Build coverage with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          target: ov_coverage
          configure-options: >
            -DCMAKE_VERBOSE_MAKEFILE=ON
            -DCMAKE_C_COMPILER_LAUNCHER=ccache
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
            -DCMAKE_C_LINKER_LAUNCHER=ccache
            -DCMAKE_CXX_LINKER_LAUNCHER=ccache
          parallel: ${{ steps.cpu-cores.outputs.count }}

      
      - name: Print info
        run: |
          ls -laR
          pwd
      - name: Generate raport
        run: |
          lcov --capture --directory ${{ github.workspace }}/../. --output-file coverage.info
          genhtml coverage.info --output-directory coverage-report
      - name: Collect coverage
        uses: codecov/codecov-action@v3
        with:
          verbose: true
